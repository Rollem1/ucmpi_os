Build Test System

latest debian lite Build

configure hostname, wifi (if required)
enable ssh
enable serial (disable shell, enable hardware)

->sudo raspi-config

add below to /boot/config.txt

#enable_uart=1

#UART0 aka ttyAMA0 pin 14,15
enable_uart=1
dtoverlay=pi3-disable-bt
dtparam=uart0=on

#UART1 aka ttyS0
#dtoverlay=uart1,txd1_pin=32,rxd1_pin=33



Install Node

->curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
->sudo apt-get install -y nodejs
->sudo apt-get install gcc g++ make
->curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add
->echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
->sudo apt-get update && sudo apt-get install yarn

->sudo apt-get install -y libavahi-compat-libdnssd-dev

Install PM2

->sudo npm install -g pm2

Configure pm2 to start at boot, execute the following and follow instructions

->pm2 startup

Install Node-red

->sudo npm install -g --unsafe-perm node-red

Install node-modules

->mkdir /home/pi/alphawerk
-> cd ~/alphawerk


->npm install serialport
->npm install mitt
->npm install xml2js
->npm install bcrypt
->npm install express
->npm install express-handlebars
->npm install express-handlebars-layouts
->npm install express-session
->npm install memorystore
->npm install body-parser
->npm install cookie-parser
->npm install request
->npm install express-fileupload
->npm install xml2js
->npm install fs-extra
->npm install path
->npm install uid-safe
->npm install https
->npm install rpi-gpio
->npm install os
->npm install child_process


add Matt’s customised modules if you want…

->cd ~/.node-red

topic message counter:

->npm install git+https://github.com/mattbrain/node-red-contrib-message-counter.git

evohome polling:

->npm install git+https://github.com/mattbrain/node-red-contrib-evohome.git



Install Mosquitto

->sudo apt-get install mosquitto

->sudo service mosquitto start

Install Cytech Components

copy code to directory (configuration.js, core-eth.js, modules.js, UCMEth.js, logger.js, etc)

create dir for config

->sudo mkdir /etc/alphawerk
->sudo chown pi:pi /etc/alphawerk

create dir for nodes

->mkdir /usr/lib/node_modules/node-red/nodes/alphawerk

copy nodes to this directory directory (10-alphawerk.html, 10-alphawerk.js)

back to ~/alphawerk

-> cd ~/alphawerk

->pm2 start core.js
->pm2 start logger.js
->pm2 start configuration.js
->pm2 start UCMEth.js
->pm2 start netserver.js
->pm2 start netcomfigurator.js
->pm2 start node-red

->pm2 save

http://ucmpi2:3000 to set the comfigurator file.

http://ucmpi2:3000/serialnumber to view the serialnumber.

uhai/comfiguration/content